-- =========================================
--              Procedimientos ROL
-- =========================================

DELIMITER //

CREATE PROCEDURE agregar_rol (
    IN p_Nombre VARCHAR(100),
    IN p_SueldoPorHora DECIMAL(10, 2)
)
BEGIN
    INSERT INTO rol (Nombre, SueldoPorHora)
    VALUES (p_Nombre, p_SueldoPorHora);
END //

DELIMITER //

CREATE PROCEDURE editar_rol (
    IN p_Codigo INT,
    IN p_Nombre VARCHAR(100),
    IN p_SueldoPorHora DECIMAL(10, 2)
)
BEGIN
    UPDATE rol
    SET Nombre = p_Nombre,
        SueldoPorHora = p_SueldoPorHora
    WHERE Codigo = p_Codigo;
END //

DELIMITER //

CREATE PROCEDURE eliminar_rol (
    IN p_Codigo INT
)
BEGIN
    DELETE FROM rol
    WHERE Codigo = p_Codigo;
END //

DELIMITER ;

-- =========================================
--            Procedimientos EMPLEADO
-- =========================================

DELIMITER //

CREATE PROCEDURE agregar_empleado (
    IN p_Rut VARCHAR(255),
    IN p_Nombre VARCHAR(255),
    IN p_Apellidos VARCHAR(255),
    IN p_Cod_rol VARCHAR(255),
    IN p_Total_horas INT,
    IN p_Sueldo_total DECIMAL(10, 2)
)
BEGIN
    INSERT INTO empleados (RUT, Nombre, Apellidos, CodigoRol, TotalHorasTrabajadas, SueldoTotal)
    VALUES (p_Rut, p_Nombre, p_Apellidos, p_Cod_rol, p_Total_horas, p_Sueldo_total);
END //

DELIMITER //

CREATE PROCEDURE editar_empleado (
    IN p_RUT VARCHAR(255),
    IN p_Nombre VARCHAR(255),
    IN p_Apellidos VARCHAR(255),
    IN p_Cod_rol VARCHAR(255),
    IN p_Total_horas INT,
    IN p_Sueldo_total DECIMAL(10, 2)
)
BEGIN
    UPDATE empleados
    SET Nombre = p_Nombre,
        Apellidos = p_Apellidos,
        CodigoRol = p_Cod_rol,
        TotalHorasTrabajadas = p_Total_horas,
        SueldoTotal = p_Sueldo_total
    WHERE RUT = p_RUT;
END //

DELIMITER //

CREATE PROCEDURE eliminar_empleado (
    IN p_RUT VARCHAR(255)
)
BEGIN
    DELETE FROM empleados
    WHERE RUT = p_RUT;
END //

DELIMITER ;

-- =========================================
--          Procedimientos HORAENTRADA
-- =========================================

DELIMITER //

CREATE PROCEDURE agregar_hora_ingreso (
    IN p_HoraIngreso DATETIME,
    IN p_RUT VARCHAR(15)
)
BEGIN
    INSERT INTO registroentrada (HoraIngreso, RUT)
    VALUES (p_HoraIngreso, p_RUT);
END //

DELIMITER //

CREATE PROCEDURE editar_hora_ingreso (
    IN p_HoraIngreso DATETIME,
    IN p_RUT VARCHAR(255)
)
BEGIN
    UPDATE registroentrada
    SET HoraIngreso = p_HoraIngreso
    WHERE RUT = p_RUT;
END //

DELIMITER //

CREATE PROCEDURE eliminar_registroentrada (
    IN p_HoraIngreso DATETIME,
    IN p_RUT VARCHAR(255)
)
BEGIN
    DELETE FROM registroentrada
    WHERE HoraIngreso = p_HoraIngreso AND RUT = p_RUT;
END //

DELIMITER ;

-- =========================================
--           Procedimientos HORASALIDA
-- =========================================

DELIMITER //

CREATE PROCEDURE agregar_hora_salida (
    IN p_HoraSalida DATETIME,
    IN p_RUT VARCHAR(15)
)
BEGIN
    INSERT INTO registrosalida (HoraSalida, RUT)
    VALUES (p_HoraSalida, p_RUT);
END //

DELIMITER //

CREATE PROCEDURE editar_hora_salida (
    IN p_HoraSalida DATETIME,
    IN p_RUT VARCHAR(255)
)
BEGIN
    UPDATE registrosalida
    SET HoraSalida = p_HoraSalida
    WHERE RUT = p_RUT;
END //

DELIMITER //

CREATE PROCEDURE eliminar_hora_salida (
    IN p_HoraSalida DATETIME,
    IN p_RUT VARCHAR(255)
)
BEGIN
    DELETE FROM registrosalida
    WHERE HoraSalida = p_HoraSalida AND RUT = p_RUT;
END //

DELIMITER ;


-- =========================================
--              Triggers
-- =========================================

DELIMITER //

CREATE TRIGGER trigger_actualizar_horas_y_sueldo
AFTER INSERT ON registrosalida
FOR EACH ROW
BEGIN
    DECLARE entrada DATETIME;
    DECLARE horas_trabajadas DECIMAL(10, 2);
    DECLARE total_horas DECIMAL(10, 2);
    DECLARE sueldo_por_hora DECIMAL(10, 2);

    -- Obtener la hora de entrada del mismo día
    SELECT HoraIngreso INTO entrada
    FROM registroentrada
    WHERE RUT = NEW.RUT
    AND DATE(HoraIngreso) = DATE(NEW.HoraSalida)
    LIMIT 1;

    -- Calcular horas trabajadas del día
    SET horas_trabajadas = TIMESTAMPDIFF(HOUR, entrada, NEW.HoraSalida);

    -- Obtener el total de horas trabajadas actuales
    SELECT TotalHorasTrabajadas INTO total_horas
    FROM Empleados
    WHERE RUT = NEW.RUT;

    -- Actualizar el total de horas trabajadas
    SET total_horas = total_horas + horas_trabajadas;
    UPDATE Empleados
    SET TotalHorasTrabajadas = total_horas
    WHERE RUT = NEW.RUT;

    -- Obtener el sueldo por hora del rol del empleado
    SELECT SueldoPorHora INTO sueldo_por_hora
    FROM Rol
    WHERE Codigo = (SELECT CodigoRol FROM Empleados WHERE RUT = NEW.RUT);

    -- Calcular y actualizar el sueldo total
    UPDATE Empleados
    SET SueldoTotal = total_horas * sueldo_por_hora
    WHERE RUT = NEW.RUT;
END //

DELIMITER ;

------------------------------------------------
Porcedimiento de r_entrada con hora del sistema
------------------------------------------------

DELIMITER //

CREATE PROCEDURE agregar_hora_ingreso (
    IN p_RUT VARCHAR(15)
)
BEGIN
    DECLARE v_exists INT;

    -- Verificar si ya existe un registro de entrada para el día actual
    SELECT COUNT(*)
    INTO v_exists
    FROM registroentrada
    WHERE RUT = p_RUT AND DATE(HoraIngreso) = CURDATE();

    IF v_exists = 0 THEN
        -- Insertar nueva hora de ingreso
        INSERT INTO registroentrada (HoraIngreso, RUT)
        VALUES (NOW(), p_RUT);
    ELSE
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Ya existe un registro de ingreso para hoy';
    END IF;
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER trigger_actualizar_horas_y_sueldo
AFTER INSERT ON registrosalida
FOR EACH ROW
BEGIN
    DECLARE entrada DATETIME;
    DECLARE horas_trabajadas DECIMAL(10, 2);
    DECLARE total_horas DECIMAL(10, 2);
    DECLARE sueldo_por_hora DECIMAL(10, 2);

    -- Obtener la hora de entrada del mismo día
    SELECT horaIngreso_registro INTO entrada
    FROM registroentrada
    WHERE rut_empleado = NEW.rut_empleado
    AND DATE(horaIngreso_registro) = DATE(NEW.horaSalida_registro)
    LIMIT 1;

    -- Calcular horas trabajadas del día
    SET horas_trabajadas = TIMESTAMPDIFF(HOUR, entrada, NEW.horaSalida_registro);

    -- Obtener el total de horas trabajadas actuales
    SELECT totalHorasTrabajadas_empleado INTO total_horas
    FROM empleados
    WHERE rut_empleado = NEW.rut_empleado;

    -- Actualizar el total de horas trabajadas
    SET total_horas = total_horas + horas_trabajadas;
    UPDATE empleados
    SET totalHorasTrabajadas_empleado = total_horas
    WHERE rut_empleado = NEW.rut_empleado;

    -- Obtener el sueldo por hora del rol del empleado
    SELECT sueldoPorHora_rol INTO sueldo_por_hora
    FROM rol
    WHERE codigo_rol = (SELECT codigo_rol FROM empleados WHERE rut_empleado = NEW.rut_empleado);

    -- Calcular y actualizar el sueldo total
    UPDATE empleados
    SET sueldoTotal_empleado = total_horas * sueldo_por_hora
    WHERE rut_empleado = NEW.rut_empleado;
END //

DELIMITER ;


---------------------------------------------------

Trigger actualizados con los nuevos nombres

---------------------------------------------------

DELIMITER //

CREATE TRIGGER trigger_actualizar_horas_y_sueldo
AFTER INSERT ON registrosalida
FOR EACH ROW
BEGIN
    DECLARE entrada DATETIME;
    DECLARE horas_trabajadas DECIMAL(10, 2);
    DECLARE total_horas DECIMAL(10, 2);
    DECLARE sueldo_por_hora DECIMAL(10, 2);

    -- Obtener la hora de entrada del mismo día
    SELECT horaIngreso_registro INTO entrada
    FROM registroentrada
    WHERE rut_empleado = NEW.rut_empleado
    AND DATE(horaIngreso_registro) = DATE(NEW.horaSalida_registro)
    LIMIT 1;

    -- Calcular horas trabajadas del día
    SET horas_trabajadas = TIMESTAMPDIFF(HOUR, entrada, NEW.horaSalida_registro);

    -- Obtener el total de horas trabajadas actuales
    SELECT totalHorasTrabajadas_empleado INTO total_horas
    FROM empleados
    WHERE rut_empleado = NEW.rut_empleado;

    -- Actualizar el total de horas trabajadas
    SET total_horas = total_horas + horas_trabajadas;
    UPDATE empleados
    SET totalHorasTrabajadas_empleado = total_horas
    WHERE rut_empleado = NEW.rut_empleado;

    -- Obtener el sueldo por hora del rol del empleado
    SELECT sueldoPorHora_rol INTO sueldo_por_hora
    FROM rol
    WHERE codigo_rol = (SELECT codigo_rol FROM empleados WHERE rut_empleado = NEW.rut_empleado);

    -- Calcular y actualizar el sueldo total
    UPDATE empleados
    SET sueldoTotal_empleado = total_horas * sueldo_por_hora
    WHERE rut_empleado = NEW.rut_empleado;
END //

DELIMITER ;

--------------------------------------------------------------------------

--------------------------------------------------------------------------
DELIMITER //

CREATE TRIGGER Incrementar_codigo_rol BEFORE INSERT ON rol
FOR EACH ROW
BEGIN
    DECLARE max_codigo INT;

    SELECT IFNULL(MAX(codigo_rol) + 1, 1) INTO max_codigo FROM rol;

    SET NEW.codigo_rol := max_codigo;
END//

DELIMITER ;
